{"mappings":"qhBACA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAAcJ,SAASC,cAAc,wBACrCI,EAAeL,SAASC,cAAc,yBAE5C,IAAIK,EAAa,EACbC,EAAY,EACZC,EAAS,EACTC,EAAW,EAgCf,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACXC,YAAW,KACzB,GAAIN,EAAe,CAEjBI,EADyB,C,SAAEN,E,MAAUC,G,KAEhC,CAELM,EADwB,C,SAAEP,E,MAAUC,G,IAGrCA,EAAM,G,CA1CbP,EAAae,UAAW,EAExBrB,EAAKsB,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAENlB,EAAae,UAAW,EACxBd,GAAcJ,EAAWsB,MACzBjB,GAAaJ,EAAUqB,MACvBhB,GAAUJ,EAAYoB,MACtBf,EAAWH,EACX,IAAK,IAAImB,EAAI,EAAGA,GAAKjB,EAAQiB,GAAK,EAChCf,EAAce,EAAGhB,GACdiB,MAAK,EAACf,SAAEA,EAAQC,MAAEA,MACjBe,EAAA9B,GAAS+B,OAAOC,QAAQ,qBAAqBlB,QAAeC,OACxDa,IAAMjB,IACRH,EAAae,UAAW,EAAK,IAGhCU,OAAM,EAACnB,SAAEA,EAAQC,MAAEA,MAClBe,EAAA9B,GAAS+B,OAAOG,QAAQ,oBAAoBpB,QAAeC,OACvDa,IAAMjB,IACRH,EAAae,UAAW,EAAK,IAInCX,GAAYF,C","sources":["src/js/03-promises.js"],"sourcesContent":["\nimport Notiflix from 'notiflix';\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nconst form = document.querySelector('.form');\nconst delayInput = document.querySelector('input[name=\"delay\"]');\nconst stepInput = document.querySelector('input[name=\"step\"]');\nconst amountInput = document.querySelector('input[name=\"amount\"]');\nconst submitButton = document.querySelector('button[type=\"submit\"]');\n\nlet delayValue = 0;\nlet stepValue = 0;\nlet amount = 0;\nlet delaySum = 0;\n\nsubmitButton.disabled = false;\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  submitButton.disabled = true;\n  delayValue = +delayInput.value;\n  stepValue = +stepInput.value;\n  amount = +amountInput.value;\n  delaySum = delayValue;\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delaySum)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n        if (i === amount) {\n          submitButton.disabled = false;\n        }\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n        if (i === amount) {\n          submitButton.disabled = false;\n        }\n      });\n\n    delaySum += stepValue;\n  }\n}\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    const timerId = setTimeout(() => {\n      if (shouldResolve) {\n        const fulfilledPromise = { position, delay };\n        resolve(fulfilledPromise);\n      } else {\n        const rejectedPromise = { position, delay };\n        reject(rejectedPromise);\n      }\n    }, delay)\n  });\n}"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delayInput","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$submitButton","$47d4ff9957288465$var$delayValue","$47d4ff9957288465$var$stepValue","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$delaySum","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","disabled","addEventListener","event","preventDefault","value","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.ab1c3201.js.map"}